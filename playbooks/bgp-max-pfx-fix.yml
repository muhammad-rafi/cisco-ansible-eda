---
- name: BGP max prefixes fix
  # hosts: localhost
  # hosts: cml-core-rtr02
  hosts: "{{ target_host }}"
  gather_facts: false
  # connection: local
  connection: ansible.netcommon.network_cli
  collections:
    - ansible.netcommon
    - cisco.iosxr
  vars:
    script_dir: '~/webex_ansible_repos/cml-ansible/scripts/'
    # ansible_network_os: cisco.iosxr.iosxr
    # ansible_connection: ansible.netcommon.network_cli

  tasks:
    - name: Display extra vars comiing from a rulebook
      ansible.builtin.debug:
        msg:
          - "Target Host: {{ target_host }}"
          - "BGP Neighbor Address: {{ bgp_neighbor }}"
          - "Local AS Number: {{ bgp_local_asn }}"
          - "Remote AS Number: {{ bgp_remote_asn }}"

    - name: Run the Python script to fetch prefixes from PeeringDB
      ansible.builtin.shell:
        # cmd: "python ../scripts/peerdb_py.py {{ bgp_remote_asn }}"
        cmd: "python {{ script_dir }}peerdb_py.py {{ bgp_remote_asn }}"
      register: peeringdb_result

    - name: Extract v4prefixes and v6prefixes
      ansible.builtin.set_fact:
        v4prefixes: "{{ peeringdb_result.stdout_lines[0] }}"
        v6prefixes: "{{ peeringdb_result.stdout_lines[1] }}"

    - name: Display v4prefixes and v6prefixes
      ansible.builtin.debug:
        msg: "v4prefixes: {{ v4prefixes }}, v6prefixes: {{ v6prefixes }}"

    - name: Merge the provided configuration with the existing running configuration
      cisco.iosxr.iosxr_bgp_neighbor_address_family:
        state: merged
        config:
          as_number: "{{ bgp_local_asn }}"
          # as_number: 65001
          neighbors:
            - neighbor_address: "{{ bgp_neighbor }}"
            # - neighbor_address: 192.168.5.14
              address_family:
                - afi: ipv4
                  safi: unicast
                  maximum_prefix:
                    max_limit: "{{ v4prefixes }}"
                    # max_limit: 10
                    threshold_value: 75
                    # warning_only: true
                    # restart: 10
                    # discard_extra_paths: false
      when: ansible_network_os == 'cisco.iosxr.iosxr'

    - name: Clear BGP Neighbor Session
      cisco.iosxr.iosxr_command:
        commands: clear bgp {{ bgp_neighbor }} graceful
        # commands: clear bgp 192.168.5.14 graceful
      when: ansible_network_os == 'cisco.iosxr.iosxr'

    - name: Wait for BGP Session Reset
      ansible.builtin.pause:
        prompt: "Waitng 30 sec for BGP reset"
        seconds: 30

    - name: Get BGP Neighbor State
      cisco.iosxr.iosxr_command:
        commands: show bgp neighbor {{ bgp_neighbor }} | utility egrep "BGP state"
        # commands: show bgp neighbor 192.168.5.14 | utility egrep "BGP state"
      register: bgp_output
      when: ansible_network_os == 'cisco.iosxr.iosxr'

    - name: Display BGP Neighbor State
      debug:
        msg: "{{ bgp_output.stdout_lines }}"

    ## ONLY FOR TESTING PURPOSE 
    # - name: Retrieve IOS-XR version
    #   cisco.iosxr.iosxr_command:
    #     commands: show version
    #   register: version_output
    #   when: ansible_network_os == 'cisco.iosxr.iosxr'

    # - name: Display Output
    #   debug:
    #     msg: "{{ inventory_hostname }} running with {{ version_output.stdout_lines[0][0] }}"

# ansible-playbook playbooks/bgp-max-pfx-fix.yml --check
# ansible-playbook playbooks/bgp-max-pfx-fix.yml -e 'bgp_remote_asn=13445'
